package com.fineway.coal.controller;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.fineway.coal.service.Coal_Service;

@Controller
@RequestMapping(value = "/coal")
public class Coal_Controller {
	@Autowired
	private Coal_Service coal_service;

	@RequestMapping(value = "/select")
	@ResponseBody
	public Map<String, Object> coal_select(int page, int num,String time,String QYMC,String PARENTID) throws Exception{
		Map<String, Object> para_map = new HashMap<String, Object>();
		Map<String, Object> result_map = new HashMap<String, Object>();
		int small_number = 0;
		int big_number = 0;
		String company_name =null;
		if(QYMC!=null&&!("").equals(QYMC)){
			company_name = URLDecoder.decode(QYMC, "utf-8");
		}
		try {
			small_number = (page - 1) * num;
			big_number = page * num;
		} catch (Exception e) {
			result_map.put("data", "");
			result_map.put("erro", "参数page、num不能为空");
			return result_map;
		}
		try {
			para_map.put("small_number", small_number);
			para_map.put("big_number", big_number);
			para_map.put("time",time);
			para_map.put("company_name",company_name);
			para_map.put("PARENTID", PARENTID);
			List<Map<String, Object>> result_list = coal_service.getselect(para_map);
			int total_number = coal_service.get_page(para_map);
			//int page_count = total_number/num;
			result_map.put("total_number",total_number);
			result_map.put("data", result_list);
			result_map.put("erro","");
			} catch (Exception e) {
			result_map.put("data","");
			result_map.put("erro", e);
			return result_map;
		}
		return result_map;
	}
	@RequestMapping(value="/select_name")
	@ResponseBody
	public boolean coal_select_name(HttpServletRequest request,HttpServletResponse response) throws Exception{
	String company_name = URLDecoder.decode(request.getParameter("QYMC"),"utf-8");
	int result = coal_service.select_name(company_name);
	if(result==0){
		return true;
	}else{
		return false;
	}
		
	}
	
	
	
	@RequestMapping(value="/insert")
	@ResponseBody
	public boolean coal_insert(HttpServletRequest request,HttpServletResponse response) throws Exception{
	Map<String, Object> para_map = new HashMap<String, Object>();
	//生成UUID
	//String MTHBZBID = UUID.randomUUID().toString().replaceAll("-", "");//id
    String CIVILREGIONALISMID = request.getParameter("CIVILREGIONALISMID");//区划id
    String QYMC =null;
    String TCMKMC=null;
    if(request.getParameter("QYMC")!=null&&!("").equals(request.getParameter("QYMC"))){
         QYMC =URLDecoder.decode(request.getParameter("QYMC"),"utf-8");//企业名称
    }
    String XYDM =request.getParameter("XYDM");//企业统一信用代码
    if(request.getParameter("TCMKMC")!=null&&!("").equals(request.getParameter("TCMKMC"))){
         TCMKMC = URLDecoder.decode(request.getParameter("TCMKMC"),"utf-8");//退出煤矿名称
    }
    float HDNL = 0;
    float TQTY = 0;
    float YFJCHT = 0;
    float NBAZ = 0;
    float QT = 0;
    if(request.getParameter("HDNL")!=null&&!("").equals(request.getParameter("HDNL"))){
         HDNL =Float.parseFloat(request.getParameter("HDNL"));//核定能力
    }
    if(request.getParameter("TQTY")!=null&&!("").equals(request.getParameter("TQTY"))){
         TQTY = Float.parseFloat(request.getParameter("TQTY"));//提前退养
    }
    if(request.getParameter("YFJCHT")!=null&&!("").equals(request.getParameter("YFJCHT"))){
         YFJCHT = Float.parseFloat(request.getParameter("YFJCHT"));//依法解除合同
    }
    if(request.getParameter("NBAZ")!=null&&!("").equals(request.getParameter("NBAZ"))){
         NBAZ =Float.parseFloat(request.getParameter("NBAZ"));//内部安置
    }
    if(request.getParameter("QT")!=null&&!("").equals(request.getParameter("QT"))){
         QT = Float.parseFloat(request.getParameter("QT"));//其他
    }
    String SFTC =request.getParameter("SFTC");//是否停产
    String SFHC = request.getParameter("SFHC");//井下设备是否回撤
    String SFFB = request.getParameter("SFFB");//井口是否关闭
    String SFZX = request.getParameter("SFZX");//证件是否注销
    String SFYS = request.getParameter("SFYS");//是否验收
    String REPORTTIME = request.getParameter("REPORTTIME");//报表时间
    String TCHSFGS = request.getParameter("TCHSFGS");//退出后是否公示
    String TCQSFGG = request.getParameter("TCQSFGG");//退出前是否公示
    String SFSBBJLXH = request.getParameter("SFSBBJLXH");//企业是否在上报部级联席会议名单内
    String SFSC = request.getParameter("SFSC");//是否仍在生产
    String SFZXXKZ = request.getParameter("SFZXXKZ");//是否注销采矿许可证
    String SFZXAQSCXKZ = request.getParameter("SFZXAQSCXKZ");//是否注销安全生产许可证
    String SFZXMTSCXKZ = request.getParameter("SFZXMTSCXKZ");//是否注销煤炭生产许可证
    String SFZXYYZZ = request.getParameter("SFZXYYZZ");//是否注销企业营业执照
    String ZZZXSFGG = request.getParameter("ZZZXSFGG");//证照注销是否公告
    String SFSZHFA = request.getParameter("SFSZHFA");//是否是置换方案中的煤炭企业
    String SFRQTC = request.getParameter("SFRQTC");//是否如期退出（核减）到位
    String SFLQCZJJ = request.getParameter("SFLQCZJJ");//是否领取中央财政奖补资金
    String SFCJCNH = request.getParameter("SFCJCNH");//是否是出具承诺函的企业
    String SFCNZBDW = request.getParameter("SFCNZBDW");//是否在承诺期落实产能置换指标到位
    
    String HCSTATE = request.getParameter("HCSTATE");//是否核查 0:未核查 1:已核查
    //String CREATETIME = request.getParameter("CREATETIME");//新增企业创建时间
    String PARENTID = request.getParameter("PARENTID");//所属省份ID
    //para_map.put("MTHBZBID", CIVILREGIONALISMID);
    para_map.put("CIVILREGIONALISMID",CIVILREGIONALISMID);       
    para_map.put("QYMC", QYMC);
    para_map.put("XYDM",XYDM); 
    para_map.put("TCMKMC",TCMKMC);
    para_map.put("HDNL",HDNL);
    para_map.put("TQTY",TQTY);
    para_map.put("YFJCHT",YFJCHT);
    para_map.put("NBAZ",NBAZ);
    para_map.put("QT",QT);
    para_map.put("SFTC",SFTC);
    para_map.put("SFHC",SFHC);
    para_map.put("SFFB",SFFB);
    para_map.put("SFZX",SFZX);
    para_map.put("SFYS",SFYS);
    para_map.put("REPORTTIME",REPORTTIME);
    para_map.put("TCHSFGS",TCHSFGS);
    para_map.put("TCQSFGG",TCQSFGG);
    para_map.put("SFSBBJLXH",SFSBBJLXH);
    para_map.put("SFSC",SFSC);
    para_map.put("SFZXXKZ",SFZXXKZ);
    para_map.put("SFZXAQSCXKZ",SFZXAQSCXKZ);
    para_map.put("SFZXMTSCXKZ",SFZXMTSCXKZ);
    para_map.put("SFZXYYZZ",SFZXYYZZ);
    para_map.put("ZZZXSFGG",ZZZXSFGG);
    para_map.put("SFSZHFA",SFSZHFA);
    para_map.put("SFCNZBDW",SFCNZBDW);
    para_map.put("SFCJCNH",SFCJCNH);
    para_map.put("SFLQCZJJ",SFLQCZJJ);
	para_map.put("SFRQTC",SFRQTC);
	   
    para_map.put("HCSTATE", HCSTATE);
   // para_map.put("CREATETIME",CREATETIME);
    para_map.put("PARENTID",PARENTID);
	boolean result = coal_service.getinsert(para_map);
	
	if(request.getParameter("MTHBZBID")!=null&&!("").equals("MTHBZBID")){
		String mthbzbid = request.getParameter("MTHBZBID");
		boolean	  update_result = coal_service.update(mthbzbid);
	}
		return result;
	}
}
